ptukey(q = q.earphones.audiobook, df = df, nmeans = 3)
SE <- sqrt(errorMS/nrow(ReducingPainLong/3))
SE
q.earphones.music <- diff.earphones.music/SE
q.earphones.audiobook <- diff.earphones.audiobook/SE
q.audiobook.music
q.earphones.music
q.earphones.audiobook
ptukey(q = q.audiobook.music, df = df, nmeans = 3)
ptukey(q = q.earphones.music, df = df, nmeans = 3)
ptukey(q = q.earphones.audiobook, df = df, nmeans = 3)
ptukey(q = q.audiobook.music, df = df, nmeans = 3)
ptukey(q = q.earphones.music, df = df, nmeans = 3)
ptukey(q = q.earphones.audiobook, df = df, nmeans = 3)
SE <- sqrt(errorMS/nrow(ReducingPainWide$Music))
SE
SE
nPerCat <- nrow(ReducingPainWide$Audiobook)
SE <- sqrt(errorMS/nPerCat))
nPerCat <- nrow(ReducingPainWide$Audiobook)
SE <- sqrt(errorMS/nPerCat)
SE
nPerCat <- nrow(ReducingPainWide$Audiobook)
nPerCat
ReducingPainWide$Audiobook
nrow(ReducingPainWide$Audiobook)
nrow(ReducingPainWide$Audiobook)
nPerCat <- 10
SE <- sqrt(errorMS/nPerCat)
SE
q.audiobook.music <- diff.audiobook.music/SE
q.earphones.music <- diff.earphones.music/SE
q.earphones.music <- diff.earphones.music/SE
q.earphones.audiobook <- diff.earphones.audiobook/SE
q.audiobook.music
q.earphones.audiobook
ptukey(q = q.audiobook.music, df = df, nmeans = 3)
ptukey(q = q.earphones.music, df = df, nmeans = 3)
ptukey(q = q.earphones.audiobook, df = df, nmeans = 3)
ptukey(q = q.audiobook.music, df = df, nmeans = 3, lower.tail = F)
ptukey(q = q.earphones.music, df = df, nmeans = 3, lower.tail = F)
ptukey(q = q.earphones.audiobook, df = df, nmeans = 3, lower.tail = F)
ReducingPainLong
xbar.cat <- tapply(X = ReducingPainLong$value, INDEX = ReducingPainLong$key, FUN = mean)
xbar.audiobook <- 5.0
meanrank <- sort(xbar.cat)
meanrank
diff.earphones.music <- xbar.earphones - xbar.music
diff.earphones.music <- xbar.earphones - xbar.music
diff.audiobook.music <- xbar.audiobook - xbar.music
diff.earphones.music
errorMS
errorMS
df <- nrow(ReducingPainLong) - 3
nPerCat <- 10
nPerCat <- 10
SE <- sqrt(errorMS/nPerCat)
SE
q.earphones.music <- diff.earphones.music/SE
q.earphones.audiobook <- diff.earphones.audiobook/SE
q.earphones.audiobook <- diff.earphones.audiobook/SE
q.audiobook.music
q.earphones.audiobook
ptukey(q = q.audiobook.music, df = df, nmeans = 3, lower.tail = F)
ptukey(q = q.earphones.music, df = df, nmeans = 3, lower.tail = F)
ptukey(q = q.earphones.audiobook, df = df, nmeans = 3, lower.tail = F)
ptukey(q = q.audiobook.music, df = df, nmeans = 3, lower.tail = F)
ptukey(q = q.earphones.music, df = df, nmeans = 3, lower.tail = F)
ptukey(q = q.earphones.audiobook, df = df, nmeans = 3, lower.tail = F)
xbar.cat
ptukey(q = q.audiobook.music, df = df, nmeans = 3, lower.tail = F)
ptukey(q = q.earphones.music, df = df, nmeans = 3, lower.tail = F)
ptukey(q = q.earphones.audiobook, df = df, nmeans = 3, lower.tail = F)
ptukey(q = q.earphones.music, df = df, nmeans = 3, lower.tail = F)
ptukey(q = q.earphones.audiobook, df = df, nmeans = 3, lower.tail = F)
meanrank <- sort(xbar.cat)
meanrank
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
# data adjusted in excel to long
data <- read.csv("Lab 8 penguin.csv")
# intermediate calcs
# Factor A = Region
# Factor B = Sex
grandMean <- mean(data$BillDepth)
Ameans <- c()
Ameans[1] <- mean(data[data$Region == "Arg", 3])
Ameans [2] <- mean(data[data$Region == "Galap", 3])
Bmeans <- c()
Bmeans[1] <- mean(data[data$Sex == "Male", 3])
Bmeans[2] <- mean(data[data$Sex == "Female", 3])
ABmeans <- c()
ABmeans[1] <- mean(data[data$Region == "Arg" & data$Sex=="Male", 3])
ABmeans[2] <- mean(data[data$Region == "Arg" & data$Sex=="Female", 3])
ABmeans[3] <- mean(data[data$Region == "Galap" & data$Sex=="Male", 3])
ABmeans[4] <- mean(data[data$Region == "Galap" & data$Sex=="Female", 3])
totalSS <- sum((data$BillDepth - grandMean)^2)
cellSS <- 6 * sum((ABmeans - grandMean)^2)
errorSS <- totalSS - cellSS
AfactorSS <- 12 * sum((Ameans - grandMean)^2)
BfactorSS <- 12 * sum((Bmeans - grandMean)^2)
df <- nrow(data) - 1
cellDF <- 3
aDF <- 1
bDF <- 1
errorCellDF <- df - celDF
errorCellDF <- df - cellDF
Ams <- AfactorSS -  aDF
Bms <- BfactorSS - bDF
ABms <-
```
ABss <- totalSS - AfactorSS - BfactorSS
abDF <- 1
ABms <- ABss/abDF
ABss <- totalSS - AfactorSS - BfactorSS
totalSS
AfactorSS
BfactorSS
ABss <- cellSS - AfactorSS - BfactorSS
ABms <- ABss/abDF
errorSS <- errorSS/errorCellDF
errorS <- errorSS/errorCellDF
totalSS <- sum((data$BillDepth - grandMean)^2)
cellSS <- 6 * sum((ABmeans - grandMean)^2)
cellSS <- 6 * sum((ABmeans - grandMean)^2)
errorSS <- totalSS - cellSS
AfactorSS <- 12 * sum((Ameans - grandMean)^2)
errorSS <- totalSS - cellSS
AfactorSS <- 12 * sum((Ameans - grandMean)^2)
BfactorSS <- 12 * sum((Bmeans - grandMean)^2)
aDF <- 1
aDF <- 1
bDF <- 1
abDF <- 1
errorCellDF <- df - cellDF
Bms <- BfactorSS - bDF
ABss <- cellSS - AfactorSS - BfactorSS
ABms <- ABss/abDF
errorms <- errorSS/errorCellDF
Af <- Ams / errorms
Ams
AfactorSS
aDF
Ams <- AfactorSS -  aDF
Ams
AfactorSS
Ams <- AfactorSS /  aDF
Bms <- BfactorSS / bDF
Af <- Ams / errorms
Bf <- Bms / errorms
ABf <- ABms / ABf
ABf <- ABms / ABms
ABms
ABms
ABf <- ABms / errorms
RegionP <- pf(q = Af, df1= aDF, df2 = errorCellDF )
RegionP <- pf(q = Af, df1= aDF, df2 = errorCellDF, lower.tail = F)
ArgFemaleP
SexP <- pf(q = Bf, df1 = bDF, df2 = errorCellDF, lower.tail = F)
interactionP <- pf(q = ABf, df1 = abDF, df2 = errorCellDF, lower.tail = F)
totalSS <- sum((data$BillDepth - grandMean)^2)
cellSS <- 6 * sum((ABmeans - grandMean)^2)
errorSS <- totalSS - cellSS
AfactorSS <- 12 * sum((Ameans - grandMean)^2)
BfactorSS <- 12 * sum((Bmeans - grandMean)^2)
df <- nrow(data) - 1
cellDF <- 3
aDF <- 1
bDF <- 1
abDF <- 1
errorCellDF <- df - cellDF
Ams <- AfactorSS /  aDF
Bms <- BfactorSS / bDF
ABss <- cellSS - AfactorSS - BfactorSS
ABms <- ABss/abDF
errorms <- errorSS/errorCellDF
Af <- Ams / errorms
Bf <- Bms / errorms
ABf <- ABms / errorms
# SS Values
totalSS
cellSS
errorSS
AfactorSS
BfactorSS
ABss
# DF values
df
errorCellDF
aDF
bDF
abDF
cellDF
# MS Values
Ams
Bms
ABms
errorms
# F Values
Af
Bf
ABf
# P Values
RegionP <- pf(q = Af, df1= aDF, df2 = errorCellDF, lower.tail = F)
SexP <- pf(q = Bf, df1 = bDF, df2 = errorCellDF, lower.tail = F)
interactionP <- pf(q = ABf, df1 = abDF, df2 = errorCellDF, lower.tail = F)
RegionP
SexP
interactionP
RegionP
SexP
interactionP
aov.res <- aov(BillDepth ~ sex * region, data = data)
aov.res <- aov(BillDepth ~ Sex * Region, data = data)
sumary(aov.res)
summary(aov.res)
library(car)
install.packages("car")
library(car)
plot(aov.res)
residuals(aov.res)
plot9residuals(aov.res))
plot(residuals(aov.res))
shapiro.test(residuals(aov.res))
interaction.plot(aov.res)
interaction.plot(x.factor = data$region, trace.factor = data$sex,
response = data$BillDepth)
interaction.plot(x.factor = data$region, trace.factor = data$sex,
response = data$BillDepth, fun = MEAN)
interaction.plot(x.factor = data$region, trace.factor = data$sex,
response = data$BillDepth, fun = mean)
male <- data$Sex[data$Sex == "Male"]
male <- data$Sex[data$Sex == "Male", 3]
male <- data$Sex[data$Sex == "Male", 2]
male <- data[data$Sex == "Male", 2]
male <- data[data$Sex == "Male", 3]
female <- data[data$Sex == "Female", 3]
lab <- c(male, female)
interaction.plot(sex, region, lab, ylab = "Sex")
sex <- gl(2, 12, 24, labels = c("female, male"))
interaction.plot(sex, region, lab, ylab = "Sex")
region <- gl(2, 12, 24, labels = c("argentena, galapagos"))
interaction.plot(sex, region, lab, ylab = "Sex")
interaction.plot(data$Region, data$Sex, data$conc, ylab = "Sex")
conc <- c(female, male, argentina, galapagos)
argentina <- data[data$Region == "Arg", 3]
galapagos <- data[data$Region == "Galap", 3]
conc <- c(female, male, argentina, galapagos)
interaction.plot(data$Region, data$Sex, conc, ylab = "Sex")
compact <- c(643, 655, 702)
midsize <- c(469, 427, 525)
fullsize <- c(484, 456, 402)
N <- 9
pressure <- c(compact, midsize, fullsize)
carsize <- c(rep("compact", 3), rep("midsize", 3), rep("fullsize", 3))
data <- data.frame(carsize, pressure)
anova.test <- aov(pressure ~ carsize, data)
summary(anova.test)
ni <- c("compact", "midsize", "fullsize")
GrandTotal <- sum(compact, midsize, fullsize)
xbar.group <- c(mean(compact), mean(midsize), mean(fullsize))
k <- 3
xbar <- GrandTotal/N
totalSS <- sum((c(compact, midsize, fullsize) - xbar)^2) # total sum of squares
totalSS
xbar <- (sum(a) + sub(b))/8
ss <-sum((c(a,b) - xbar)^2)
a <- c(18,15,16,18)
b <- c(21,18,17,21)
xbar <- (sum(a) + sub(b))/8
ss <-sum((c(a,b) - xbar)^2)
ss
totalSS
t.test?
?
f
?t.test
t.test(x = westside, y = eastside)
westside <- c(195, 210, 191, 205, 222, 168, 204, 184, 191, 165, 346, 270, 232, 285, 289, 247, 260, 275, 215, 255, 237, 231, 283, 260, 241, 199, 245, 223, 211, 185)
eastside <- c(113, 101,121, 87, 95, 140, 115, 135, 91, 155, 35, 49, 68, 97, 100, 185, 93, 140, 101, 166, 95, 168, 171, 118, 115, 137, 165, 85, 91, 124)
t.test(x = westside, y = eastside)
t.test(x = westside, y = eastside) * 2
t.test(x = westside, y = eastside, alternative = "two-sided")
t.test(x = westside, y = eastside, alternative = "two.sided")
FirstDigit <-  c(1,2,3,4,5,6,7,8,9)
ObsCount <- c(57,31,28,14,11,11,9,10,12)
PredProb <-  c(0.301, 0.176, 0.125, 0.097, 0.079, 0.067, 0.058, 0.051, 0.046)
PredCount <- ObsCount * PredProb
PredCount
total <- sum(ObsCount)
PredProb <-  c(0.301, 0.176, 0.125, 0.097, 0.079, 0.067, 0.058, 0.051, 0.046)
PredCount <- total * PredProb
PredCount
sum(PredCoutn)
sum(PredCount)
total
PredCount
chisq.terms <- (ObsCount-PredCount)^2/PredCount
chisq.terms
chisq.stat <- sum(chisq.terms)
chisq.stat
p <- pchisq(q = chisq.stat, df = df, lower.tail = FALSE)
df <- 9 - 1
p <- pchisq(q = chisq.stat, df = df, lower.tail = FALSE)
p
ss <-sum((c(a,b) - xbar)^2)/8
ss
totalSS <- sum((c(compact, midsize, fullsize) - xbar)^2) # total sum of squares
a <- c(18,15,16,18)
b <- c(21,18,17,21)
xbar <- (sum(a) + sub(b))/8
ss <-sum((c(a,b) - xbar)^2)/8
ss
Beehives = c(15, 0, 5, 9, 2)
Kiwifruit = c(45, 1, 35, 43, 33)
dif <- Beehives - Kiwifruit
diff <- Beehives - Kiwifruit
rank(diff)
diff <- Beehives - Kiwifruit
diff
sum(diff^2)
sum(diff^2)/(10(10^2 -1)
sum(diff^2)/(10(10^2 -1)
diff
sum(diff^2)
sum(diff^2)  /(10(10^2 -1)
sum(diff^2)  /(10(10^2 -1)
numerator <- sum(diff^2)
numerator
numerator/(10(10^2 -1)
numerator/(10(10^2 -1))
numerator/(10(10^2 -1))
numerator <- sum(diff^2)
numerator/(10(10^2 -1))
numerator <- sum(diff^2)
numerator
numerator/(10(10^2 -1))
r <- numerator/(10(10^2 -1))
r <- numerator/(10 * (10^2 -1))
r
t <- r * sqrt((10 - 2)/(1 - r^2))
8/(1-r^2)
spearmans
spearman
numerator <- sum(diff^2)
numerator
r <- 1 - numerator/(10 * (10^2 -1))
numerator
r <- 1 - numerator/(10 * (10^2 -1))
r
8/(1-r^2)
t <- r * sqrt((10 - 2)/(1 - r^2))
numerator <- sum(diff^2)
r <- 1 - numerator/(10 * (10^2 -1))
t <- r * sqrt((10 - 2)/(1 - r^2))
(10 - 2)/(1 - r^2)
diff
diff <- abs(Beehives - Kiwifruit)
diff
diff <- abs(Beehives - Kiwifruit)
diff <- abs(Beehives - Kiwifruit)
numerator <- sum(diff^2)
r <- 1 - numerator/(10 * (10^2 -1))
t <- r * sqrt((10 - 2)/(1 - r^2))
diff <- abs(Beehives - Kiwifruit)
numerator <- sum(diff^2)
r <- 1 - (numerator/(10 * (10^2 -1)))
r
diff <- abs(Beehives - Kiwifruit)
numerator <- 6 * sum(diff^2)
numerator
denominator <- 10 * (100 - 1)
r <- numerator/denominator
r
r <-1 -  (numerator/denominator)
r
t <- r * sqrt((10 - 2)/(1 - r^2))
sqrt((10 - 2)/(1 - r^2)
sqrt((10 - 2)/(1 - r^2))
(10 - 2)/(1 - r^2))
(10 - 2)/(1 - r^2)
r <- 1 -  (numerator/denominator)
r
diff <- Beehives - Kiwifruit
numerator <- 6 * sum(diff^2)
denominator <- 10 * (100 - 1)
r <- 1 -  (numerator/denominator)
r
numerator <- 6 * sum(diff^2)
denominator <- 5 * (25 - 1)
r <- 1 -  (numerator/denominator)
r
t <- r * sqrt((5 - 2)/(1 - r^2))
n <- 5
numerator <- 6 * sum(diff^2)
denominator <- n * (n^2 - 1)
r <- 1 -  (numerator/denominator)
r
t <- r * sqrt((n - 2)/(1 - r^2))
diff <- Beehives - Kiwifruit
diff
6 * sum(diff^2)
(6 * sum(diff^2))/(n * (n^2 - 1))
1 - (6 * sum(diff^2))/(n * (n^2 - 1))
t <- r * sqrt((n - 2)/(1 - r^2))
t
(n - 2)/(1 - r^2)
r <- 1 - (6 * sum(diff^2))/(n * (n^2 - 1))
t <- r * sqrt((n - 2)/(1 - r^2))
r
t
sum(diff^2)
?spearmans
?cor.test
cor.test(Beehives, Kiwifruit, alternative = "two.sided")
cor.test(Beehives, Kiwifruit, alternative = "two.sided", method = "spearman")
Beehives = c(15, 0, 5, 9, 2)
Kiwifruit = c(45, 1, 35, 43, 33)
n <- 5
diff <- Beehives - Kiwifruit
diff
diff^2
sum(diff^2)
Beehives = c(15, 0, 5, 9, 2)
Kiwifruit = c(45, 1, 35, 43, 33)
n <- 5
diff <- Kiwifruit - Beehives
diff
r <- 1 - (6 * sum(diff^2))/(n * (n^2 - 1))
r
t <- r * sqrt((n - 2)/(1 - r^2))
cor.test(Beehives, Kiwifruit, alternative = "two.sided", method = "spearman")
t <- r * sqrt((n - 2)/(1 - r^2))
(n * (n^2 - 1)
(n * (n^2 - 1)
(n * (n^2 - 1))
5 * (5^2 -1)
5 * (5^2 - 1)
5^2
24*5
r <- 1 - (6 * sum(diff^2))/(n * (n^2 - 1))
r <- abs(r)
t <- r * sqrt((n - 2)/(1 - r^2))
r
t <- r * sqrt((n - 2)/(1 - r^2))
r
r <- 1 - (6 * sum(diff^2))/(n * (n^2 - 1))
r
(1 - r^2)
xbar <- (sum(a), b))/8
xbar <- (sum(a, b))/8
xbar
ss <-sum((c(a,b) - xbar)^2)/8
ss
ss <-sum((c(a,b) - xbar)^2)
ss
install_tinytex()
packages.install("tinytex")
package.install("tinytex")
install.packages("tinytex")
install_tinytex()
install.packages("tinytex")
tinytex::r_texmf()
tinytex::tlmgr_path()
install.packages("tinytex")
tinytex::r_texmf()
tinytex::tlmgr_path()
tinytex::tlmgr_path()
tinytex::tinytex_root()
tinytex::install_tinytex()
Y
y
Found 'C:\Users\sn339\AppData\Local\Programs\MiKTeX\miktex\bin\x64\pdftex.exe', which indicates a LaTeX distribution may have existed in the system.
> tinytex::install_tinytex()
> tinytex::install_tinytex()
y
tinytex::install_tinytex()
Y
tinytex::install_tinytex()
N
tinytex::install_tinytex()
Y
tinytex::install_tinytex()
Y
tinytex::install_tinytex()
tinytex::install_tinytex(force = TRUE)
install.packages("sf")
library(sf, tidyverse)
library(tidyverse)
bikelanes <- st_read("path/to/your/file.geojson")
bikelanes <- st_read("bikelanes.geojson")
setwd("C:/Temp/bikefacilities_SEA/assets")
bikelanes <- st_read("bikelanes.geojson")
bikelanes <- st_read("bikelanes.geojson")
View(bikelanes)
head
head(bikelanes)
bikelanes_clean <- bikelanes %>%
select(OBJECTID, UNITID, UNITDESC, CATEGORY, MODEL_TYPE, Shape__Length, geometry)
View(bikelanes_clean)
st_write(bikelanes_clean, "bike_facilities_clean.geojson", driver = "GeoJSON")
bikelanes <- st_read("bike_racks.geojson")
bikelanes <- st_read("bike_racks.geojson")
bikerack <- st_read("bike_racks.geojson")
View(bikerack)
head(bikerack)
bikeracks_clean <- bikeracks %>%
select(OBJECTID, UNITID, UNITDESC, CONDITION, RACK_CAPACITY, BIKE_FACILITY, geometry)
bikeracks_clean <- bikerack %>%
select(OBJECTID, UNITID, UNITDESC, CONDITION, RACK_CAPACITY, BIKE_FACILITY, geometry)
View(bikeracks_clean)
st_write(bikeracks_clean, "bike_racks_clean.geojson", driver = "GeoJSON")
